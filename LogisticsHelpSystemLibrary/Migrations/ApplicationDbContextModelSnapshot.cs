// <auto-generated />
using System;
using LogisticsHelpSystemLibrary.Models.Database.ApplicationDb;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace LogisticsHelpSystemLibrary.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.4")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("LogisticsHelpSystemLibrary.Models.Database.ApplicationDb.Card", b =>
                {
                    b.Property<int>("CardId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CardNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CardStatusId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("CardId");

                    b.HasIndex("CardStatusId");

                    b.HasIndex("UserId");

                    b.ToTable("Card");
                });

            modelBuilder.Entity("LogisticsHelpSystemLibrary.Models.Database.ApplicationDb.CardStatus", b =>
                {
                    b.Property<int>("CardStatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("StatusDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CardStatusId");

                    b.ToTable("CardStatuses");
                });

            modelBuilder.Entity("LogisticsHelpSystemLibrary.Models.Database.ApplicationDb.Component", b =>
                {
                    b.Property<int>("ComponentID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<float?>("ComponentDepth")
                        .HasColumnType("real");

                    b.Property<float?>("ComponentHeigth")
                        .HasColumnType("real");

                    b.Property<string>("ComponentName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ComponentPartNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float?>("ComponentWeigth")
                        .HasColumnType("real");

                    b.Property<float?>("ComponentWidth")
                        .HasColumnType("real");

                    b.HasKey("ComponentID");

                    b.ToTable("Components");
                });

            modelBuilder.Entity("LogisticsHelpSystemLibrary.Models.Database.ApplicationDb.Delivery", b =>
                {
                    b.Property<int>("DeliveryID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DeliveryAmount")
                        .HasColumnType("int");

                    b.Property<DateTime>("DeliveryTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("OrderID")
                        .HasColumnType("int");

                    b.Property<int>("UserID")
                        .HasColumnType("int");

                    b.HasKey("DeliveryID");

                    b.HasIndex("OrderID");

                    b.HasIndex("UserID");

                    b.ToTable("Deliveries");
                });

            modelBuilder.Entity("LogisticsHelpSystemLibrary.Models.Database.ApplicationDb.Log", b =>
                {
                    b.Property<int>("LogID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("LogAction")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LogDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LogOn")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LogTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserID")
                        .HasColumnType("int");

                    b.HasKey("LogID");

                    b.HasIndex("UserID");

                    b.ToTable("Logs");
                });

            modelBuilder.Entity("LogisticsHelpSystemLibrary.Models.Database.ApplicationDb.Order", b =>
                {
                    b.Property<int>("OrderID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ComponentID")
                        .HasColumnType("int");

                    b.Property<int>("OrderAmount")
                        .HasColumnType("int");

                    b.Property<DateTime>("OrderEndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("OrderFeedbackNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OrderNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("OrderStartDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("PriorityID")
                        .HasColumnType("int");

                    b.Property<int>("WorkGroupID")
                        .HasColumnType("int");

                    b.HasKey("OrderID");

                    b.HasIndex("ComponentID");

                    b.HasIndex("PriorityID");

                    b.HasIndex("WorkGroupID");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("LogisticsHelpSystemLibrary.Models.Database.ApplicationDb.PackingMaterial", b =>
                {
                    b.Property<int>("MaterialID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("HasDimension")
                        .HasColumnType("bit");

                    b.Property<float?>("MaterialDepth")
                        .HasColumnType("real");

                    b.Property<float?>("MaterialHeigth")
                        .HasColumnType("real");

                    b.Property<string>("MaterialName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MaterialPartNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float?>("MaterialWeigth")
                        .HasColumnType("real");

                    b.Property<float?>("MaterialWidth")
                        .HasColumnType("real");

                    b.HasKey("MaterialID");

                    b.ToTable("PackingMaterials");
                });

            modelBuilder.Entity("LogisticsHelpSystemLibrary.Models.Database.ApplicationDb.PackingMaterialUsedOnOrder", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.Property<int>("MaterialID")
                        .HasColumnType("int");

                    b.Property<int>("OrderID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("MaterialID");

                    b.HasIndex("OrderID");

                    b.ToTable("PackingMaterialUsedOnOrders");
                });

            modelBuilder.Entity("LogisticsHelpSystemLibrary.Models.Database.ApplicationDb.Pickup", b =>
                {
                    b.Property<int>("PickupID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("PickupTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserID")
                        .HasColumnType("int");

                    b.HasKey("PickupID");

                    b.HasIndex("UserID");

                    b.ToTable("Pickups");
                });

            modelBuilder.Entity("LogisticsHelpSystemLibrary.Models.Database.ApplicationDb.PickupRequest", b =>
                {
                    b.Property<int>("PickupRequestID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("OrderID")
                        .HasColumnType("int");

                    b.Property<int?>("PickupID")
                        .HasColumnType("int");

                    b.Property<int>("PickupRequestAmount")
                        .HasColumnType("int");

                    b.Property<DateTime>("PickupRequestTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserID")
                        .HasColumnType("int");

                    b.HasKey("PickupRequestID");

                    b.HasIndex("OrderID");

                    b.HasIndex("PickupID");

                    b.HasIndex("UserID");

                    b.ToTable("PickupRequests");
                });

            modelBuilder.Entity("LogisticsHelpSystemLibrary.Models.Database.ApplicationDb.Priority", b =>
                {
                    b.Property<int>("PriorityID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PriorityID");

                    b.ToTable("Priorities");
                });

            modelBuilder.Entity("LogisticsHelpSystemLibrary.Models.Database.ApplicationDb.User", b =>
                {
                    b.Property<int>("UserID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ApplicationUserGUID")
                        .IsRequired()
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("UserStatusId")
                        .HasColumnType("int");

                    b.Property<int?>("WorkGroupId")
                        .HasColumnType("int");

                    b.HasKey("UserID");

                    b.HasIndex("UserStatusId");

                    b.HasIndex("WorkGroupId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("LogisticsHelpSystemLibrary.Models.Database.ApplicationDb.UserStatus", b =>
                {
                    b.Property<int>("UserStatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("StatusDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserStatusId");

                    b.ToTable("UserStatuses");
                });

            modelBuilder.Entity("LogisticsHelpSystemLibrary.Models.Database.ApplicationDb.WorkGroup", b =>
                {
                    b.Property<int>("WorkGroupId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("WorkGroupName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WorkGroupNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("WorkGroupId");

                    b.ToTable("WorkGroups");
                });

            modelBuilder.Entity("LogisticsHelpSystemLibrary.Models.Database.ApplicationDb.Card", b =>
                {
                    b.HasOne("LogisticsHelpSystemLibrary.Models.Database.ApplicationDb.CardStatus", "Status")
                        .WithMany("Cards")
                        .HasForeignKey("CardStatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LogisticsHelpSystemLibrary.Models.Database.ApplicationDb.User", "User")
                        .WithMany("Cards")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Status");

                    b.Navigation("User");
                });

            modelBuilder.Entity("LogisticsHelpSystemLibrary.Models.Database.ApplicationDb.Delivery", b =>
                {
                    b.HasOne("LogisticsHelpSystemLibrary.Models.Database.ApplicationDb.Order", "Order")
                        .WithMany("Delivered")
                        .HasForeignKey("OrderID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LogisticsHelpSystemLibrary.Models.Database.ApplicationDb.User", "User")
                        .WithMany()
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("User");
                });

            modelBuilder.Entity("LogisticsHelpSystemLibrary.Models.Database.ApplicationDb.Log", b =>
                {
                    b.HasOne("LogisticsHelpSystemLibrary.Models.Database.ApplicationDb.User", "User")
                        .WithMany()
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("LogisticsHelpSystemLibrary.Models.Database.ApplicationDb.Order", b =>
                {
                    b.HasOne("LogisticsHelpSystemLibrary.Models.Database.ApplicationDb.Component", "Component")
                        .WithMany("Orders")
                        .HasForeignKey("ComponentID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LogisticsHelpSystemLibrary.Models.Database.ApplicationDb.Priority", "Priority")
                        .WithMany("Orders")
                        .HasForeignKey("PriorityID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LogisticsHelpSystemLibrary.Models.Database.ApplicationDb.WorkGroup", "WorkGroup")
                        .WithMany()
                        .HasForeignKey("WorkGroupID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Component");

                    b.Navigation("Priority");

                    b.Navigation("WorkGroup");
                });

            modelBuilder.Entity("LogisticsHelpSystemLibrary.Models.Database.ApplicationDb.PackingMaterialUsedOnOrder", b =>
                {
                    b.HasOne("LogisticsHelpSystemLibrary.Models.Database.ApplicationDb.PackingMaterial", "Material")
                        .WithMany("packingMaterialUsedOnOrders")
                        .HasForeignKey("MaterialID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LogisticsHelpSystemLibrary.Models.Database.ApplicationDb.Order", "Order")
                        .WithMany("PackingMaterialUsed")
                        .HasForeignKey("OrderID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Material");

                    b.Navigation("Order");
                });

            modelBuilder.Entity("LogisticsHelpSystemLibrary.Models.Database.ApplicationDb.Pickup", b =>
                {
                    b.HasOne("LogisticsHelpSystemLibrary.Models.Database.ApplicationDb.User", "User")
                        .WithMany()
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("LogisticsHelpSystemLibrary.Models.Database.ApplicationDb.PickupRequest", b =>
                {
                    b.HasOne("LogisticsHelpSystemLibrary.Models.Database.ApplicationDb.Order", "Order")
                        .WithMany("PickupRequested")
                        .HasForeignKey("OrderID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LogisticsHelpSystemLibrary.Models.Database.ApplicationDb.Pickup", "Pickup")
                        .WithMany("PickupRequests")
                        .HasForeignKey("PickupID");

                    b.HasOne("LogisticsHelpSystemLibrary.Models.Database.ApplicationDb.User", "User")
                        .WithMany()
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("Pickup");

                    b.Navigation("User");
                });

            modelBuilder.Entity("LogisticsHelpSystemLibrary.Models.Database.ApplicationDb.User", b =>
                {
                    b.HasOne("LogisticsHelpSystemLibrary.Models.Database.ApplicationDb.UserStatus", "Status")
                        .WithMany("Users")
                        .HasForeignKey("UserStatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LogisticsHelpSystemLibrary.Models.Database.ApplicationDb.WorkGroup", "WorkGroup")
                        .WithMany("Users")
                        .HasForeignKey("WorkGroupId");

                    b.Navigation("Status");

                    b.Navigation("WorkGroup");
                });

            modelBuilder.Entity("LogisticsHelpSystemLibrary.Models.Database.ApplicationDb.CardStatus", b =>
                {
                    b.Navigation("Cards");
                });

            modelBuilder.Entity("LogisticsHelpSystemLibrary.Models.Database.ApplicationDb.Component", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("LogisticsHelpSystemLibrary.Models.Database.ApplicationDb.Order", b =>
                {
                    b.Navigation("Delivered");

                    b.Navigation("PackingMaterialUsed");

                    b.Navigation("PickupRequested");
                });

            modelBuilder.Entity("LogisticsHelpSystemLibrary.Models.Database.ApplicationDb.PackingMaterial", b =>
                {
                    b.Navigation("packingMaterialUsedOnOrders");
                });

            modelBuilder.Entity("LogisticsHelpSystemLibrary.Models.Database.ApplicationDb.Pickup", b =>
                {
                    b.Navigation("PickupRequests");
                });

            modelBuilder.Entity("LogisticsHelpSystemLibrary.Models.Database.ApplicationDb.Priority", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("LogisticsHelpSystemLibrary.Models.Database.ApplicationDb.User", b =>
                {
                    b.Navigation("Cards");
                });

            modelBuilder.Entity("LogisticsHelpSystemLibrary.Models.Database.ApplicationDb.UserStatus", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("LogisticsHelpSystemLibrary.Models.Database.ApplicationDb.WorkGroup", b =>
                {
                    b.Navigation("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
